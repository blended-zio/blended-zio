(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{123:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return d}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=i.a.createContext({}),p=function(e){var t=i.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},b=function(e){var t=p(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(a),m=n,d=b["".concat(s,".").concat(m)]||b[m]||h[m]||r;return a?i.a.createElement(d,o(o({ref:t},l),{},{components:a})):i.a.createElement(d,o({ref:t},l))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,s=new Array(r);s[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var l=2;l<r;l++)s[l]=a[l];return i.a.createElement.apply(null,s)}return i.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},82:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return p}));var n=a(3),i=a(7),r=(a(0),a(123)),s={id:"usecases",title:"Blended Use Cases",slug:"/"},o={unversionedId:"usecases",id:"usecases",isDocsHomePage:!1,title:"Blended Use Cases",description:"An overview of requirements for Blended",source:"@site/docs/usecases.md",slug:"/",permalink:"/blended-zio/docs/",version:"current",sidebar:"someSidebar",next:{title:"Service based containers",permalink:"/blended-zio/docs/container"}},c=[{value:"High Level",id:"high-level",children:[{value:"General architecture",id:"general-architecture",children:[]},{value:"Remote location architecture",id:"remote-location-architecture",children:[]}]},{value:"Application requirements",id:"application-requirements",children:[{value:"Data-center -&gt; Shop",id:"data-center---shop",children:[]},{value:"Shop -&gt; Data-center",id:"shop---data-center",children:[]},{value:"Intra-shop",id:"intra-shop",children:[]},{value:"Messaging architecture",id:"messaging-architecture",children:[]},{value:"Proxying",id:"proxying",children:[]}]},{value:"Secondary requirements",id:"secondary-requirements",children:[{value:"Config as code",id:"config-as-code",children:[]},{value:"Static packaging",id:"static-packaging",children:[]},{value:"Certificate provisioning",id:"certificate-provisioning",children:[]}]},{value:"Testing strategy",id:"testing-strategy",children:[{value:"Simple integration tests",id:"simple-integration-tests",children:[]},{value:"Kubernetes based integration tests",id:"kubernetes-based-integration-tests",children:[]}]}],l={toc:c};function p(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"an-overview-of-requirements-for-blended"},"An overview of requirements for Blended"),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"For the sake of this article a ",Object(r.b)("em",{parentName:"p"},"Blended")," based application instance running on top of a JVM shall be referenced to as a ",Object(r.b)("em",{parentName:"p"},"blended container")," or simply ",Object(r.b)("em",{parentName:"p"},"container"),"."))),Object(r.b)("h2",{id:"high-level"},"High Level"),Object(r.b)("h3",{id:"general-architecture"},"General architecture"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Blended")," has it's roots in ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Enterprise_application_integration"}),"EAI")," and was designed primarily to be used as a communication backbone in a distributed enterprise. The company has a centralized IT with several backend applications and stores/offices  in several countries."),Object(r.b)("p",null,"The backend applications communicate with each other over a JMS backbone. This backbone is also used to provide data to the stores and keep it up to date and to collect data from the stores to be processed in the central applications. For monitoring and security reasons, each shop is defined with a dedicated channel to push data to the shop, while the data center collects data from country specific channels that the shops use to send their data to. As a result, from the perspective of any shop all data flows through the same channel and therefore the differentiation of business cases must be encoded within the messages."),Object(r.b)("h3",{id:"remote-location-architecture"},"Remote location architecture"),Object(r.b)("p",null,"As a result, within the shops we have at least one ",Object(r.b)("em",{parentName:"p"},"shop container")," which serves as communication partner for the backend applications. Some of the shop specific applications may require that the data is pushed different machines. This is the case for applications that require data import/export by using the local file system. In these cases, the shop may require the installation of one or more ",Object(r.b)("em",{parentName:"p"},"secondary containers"),"."),Object(r.b)("p",null,"These secondary containers ",Object(r.b)("strong",{parentName:"p"},"never")," communicate with the data-center directly, but use the ",Object(r.b)("em",{parentName:"p"},"shop container")," as their messaging relay. In order to keep the shop in itself operating even if the connectivity to the data center is lost, the ",Object(r.b)("em",{parentName:"p"},"shop container")," and the associated ",Object(r.b)("em",{parentName:"p"},"secondary containers")," are connected to each other with a shop internal JMS backbone, which is connected to the data center by the means of a store and forward mechanism."),Object(r.b)("p",null,"For resilience, the ",Object(r.b)("em",{parentName:"p"},"shop containers")," should be run in a cluster."),Object(r.b)("p",null,Object(r.b)("img",Object(n.a)({parentName:"p"},{src:"../img/kroki/afc39df4753b3177ac90e72d3bc7d06f.svg",alt:"afc39df4753b3177ac90e72d3bc7d06f",title:"Collaborating containers"}))),Object(r.b)("h2",{id:"application-requirements"},"Application requirements"),Object(r.b)("h3",{id:"data-center---shop"},"Data-center -> Shop"),Object(r.b)("p",null,"Data is sent to an individual shop by placing a message in the shop specific channel, where the ",Object(r.b)("em",{parentName:"p"},"shop container")," can consume them as a client to the central messaging backbone."),Object(r.b)("h3",{id:"shop---data-center"},"Shop -> Data-center"),Object(r.b)("p",null,"Data is provided from the shop via the ",Object(r.b)("em",{parentName:"p"},"shop container")," which will place messages in the central, country specific messaging channel."),Object(r.b)("h3",{id:"intra-shop"},"Intra-shop"),Object(r.b)("p",null,"All ",Object(r.b)("em",{parentName:"p"},"containers")," within the shop can communicate with each other using the shop's messaging backbone without involving the central messaging backbone at all."),Object(r.b)("h3",{id:"messaging-architecture"},"Messaging architecture"),Object(r.b)("p",null,"All messages are routed via the ",Object(r.b)("em",{parentName:"p"},"shop container")," using the same services. Since we are using JMS messages, we can assume that we have a message body and custom message headers to transport information."),Object(r.b)("p",null,"Within the message we require an identifier to denote the business case the message belongs to. This business case identifier determines the routing rules that shall be applied to the message moving through the ",Object(r.b)("em",{parentName:"p"},"container"),"."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"A business case ",Object(r.b)("strong",{parentName:"p"},"price")," may indicate that the message shall be routed to the ",Object(r.b)("em",{parentName:"p"},"shop.price")," messaging channel, where a cash desk application may be listening as a consumer."),Object(r.b)("p",{parentName:"div"},"A business case ",Object(r.b)("strong",{parentName:"p"},"payment")," may indicate that the message shall be routed to the ",Object(r.b)("em",{parentName:"p"},"central.payments")," messaging channel, where a central application may be listening as a consumer."))),Object(r.b)("p",null,"Keeping these examples in mind we can see that the ",Object(r.b)("em",{parentName:"p"},"shop container")," must be able to route message independently from the source or destination messaging provider. Also, since the ",Object(r.b)("em",{parentName:"p"},"shop container")," should be able to operate regardless whether it is currently connected to the central application, the overall communication is split into an ",Object(r.b)("em",{parentName:"p"},"inbound bridge"),", an ",Object(r.b)("em",{parentName:"p"},"outbound bridge")," and a ",Object(r.b)("em",{parentName:"p"},"dispatcher"),"."),Object(r.b)("p",null,"The ",Object(r.b)("em",{parentName:"p"},"inbound bridge")," consumes messages from central messaging channels and places them in shop local messaging channels for further processing."),Object(r.b)("p",null,"The ",Object(r.b)("em",{parentName:"p"},"outbound bridge")," consumes messages from shop local messaging channels and places them in central messaging channels."),Object(r.b)("p",null,"The ",Object(r.b)("em",{parentName:"p"},"dispatcher")," consumes messages from a local dispatcher messaging channel, enriches the message with routing information and either"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"dispatches the message to a shop local channel to be consumed by a shop local application"),Object(r.b)("li",{parentName:"ul"},"dispatches the message to a shop local channel to be routed further to a central channel")),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"The important architectural decision is, that ",Object(r.b)("strong",{parentName:"p"},"only")," the ",Object(r.b)("em",{parentName:"p"},"shop container")," is connected to the central messaging backbone while the ",Object(r.b)("em",{parentName:"p"},"secondary containers")," use the inbound / outbound bridge to communicate with the central applications."))),Object(r.b)("p",null,"Besides this general message flow architecture, the ",Object(r.b)("em",{parentName:"p"},"usual")," requirements apply:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"No messages must be be lost"),Object(r.b)("li",{parentName:"ul"},"Messages must be tracked from ",Object(r.b)("em",{parentName:"li"},"shop entry")," to ",Object(r.b)("em",{parentName:"li"},"shop exit")," with enough information to gather business case related statistics for message processing"),Object(r.b)("li",{parentName:"ul"},"All routing information is parametrized and if required must be kept in message headers"),Object(r.b)("li",{parentName:"ul"},"The ",Object(r.b)("em",{parentName:"li"},"dispatcher")," must not modify the message body nor shall it be required to read it"),Object(r.b)("li",{parentName:"ul"},"The message providers must be pluggable, so that migration between JMS providers is possible"),Object(r.b)("li",{parentName:"ul"},"The ",Object(r.b)("em",{parentName:"li"},"dispatcher")," ideally does not have knowledge whether it processes messages originating from JMS or some other messaging backbone such as Kafka or an AMQP or a MQTT capable backbone. For testing purposes messages might be generated or read from the file system.")),Object(r.b)("h3",{id:"proxying"},"Proxying"),Object(r.b)("p",null,"More and more backend applications offer REST services rather than JMS. As some of the shop applications move at a different speed in terms of their development, in some cases a protocol mapping JMS <-> REST is required. This mapping shall be configurable, so that new use cases can be adopted without coding."),Object(r.b)("p",null,"Within the shop architecture, the protocol mapping should be available to all ",Object(r.b)("em",{parentName:"p"},"containers")," as services within the ",Object(r.b)("em",{parentName:"p"},"shop container"),"."),Object(r.b)("h2",{id:"secondary-requirements"},"Secondary requirements"),Object(r.b)("h3",{id:"config-as-code"},"Config as code"),Object(r.b)("p",null,"The outlined use cases are mostly driven by configuration, which may become quite complex. Therefore we have made a decision early on, that the configuration files are treated as code and are packaged as part of a ",Object(r.b)("em",{parentName:"p"},"container")," deployment. Furthermore, the fingerprints of the config-files are recorded by the packaging process, to that we can detect ad hoc config changes that may have happened after ",Object(r.b)("em",{parentName:"p"},"container")," rollout."),Object(r.b)("h3",{id:"static-packaging"},"Static packaging"),Object(r.b)("p",null,"A ",Object(r.b)("em",{parentName:"p"},"blended container")," has at least a common runtime and has - depending on it's purpose - services implemented on top of the core runtime. The build process shall support packaging of containers for different purposes simply by listing the services or modules required for that purpose."),Object(r.b)("h3",{id:"certificate-provisioning"},"Certificate provisioning"),Object(r.b)("p",null,"Each ",Object(r.b)("em",{parentName:"p"},"container")," has potential services communicating via network sockets - especially JMS or HTTP server components. ",Object(r.b)("em",{parentName:"p"},"Blended")," shall provide a general SSL Context Layer that all components requiring SSL support shall use. The SSL Context Layer shall be capable of retrieving a server SSL certificate, maintain it and configure the SSL Context to use the obtained certificate as server side certificate."),Object(r.b)("p",null,"The first implementations of the certificate provisioning shall be for self signed certificates and certificates obtained from a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Simple_Certificate_Enrollment_Protocol"}),"SCEP")," capable server."),Object(r.b)("h2",{id:"testing-strategy"},"Testing strategy"),Object(r.b)("p",null,"All modules shall be unit tested. Even though this seems straight forward, some corner cases are hard to test if the code touches external systems or relies on timeouts."),Object(r.b)("h3",{id:"simple-integration-tests"},"Simple integration tests"),Object(r.b)("p",null,"The build process shall produce ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.docker.com/"}),"docker")," images that can be used to test the collaboration of ",Object(r.b)("em",{parentName:"p"},"shop containers")," and ",Object(r.b)("em",{parentName:"p"},"secondary containers")),Object(r.b)("h3",{id:"kubernetes-based-integration-tests"},"Kubernetes based integration tests"),Object(r.b)("p",null,"The produced docker images shall be deployable in a kubernetes infrastructure, so that within a cluster one or more shops can be deployed. A specialized ",Object(r.b)("em",{parentName:"p"},"blended container"),", the ",Object(r.b)("em",{parentName:"p"},"test container")," shall auto-discover the deployed containers and periodically generate test messages and examine the outcome. These tests shall run as long as the ",Object(r.b)("em",{parentName:"p"},"test container")," is running."),Object(r.b)("p",null,"These tests will expose resource leaks and allow to examine failover and restart behavior."))}p.isMDXComponent=!0}}]);