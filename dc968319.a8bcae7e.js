(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{94:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return r})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return b}));var i=n(3),a=n(7),o=(n(0),n(103)),c={slug:"zio-logging",title:"Using ZIO Logging",tags:["ZIO","Logging","Utilities"],author:"Andreas Gies",author_url:"https://github.com/atooni"},r={permalink:"/blog/zio-logging",source:"@site/blog/2020-09-28-ZIOLogging.md",description:"The complete source code used in this article can be found on github",date:"2020-09-28T00:00:00.000Z",tags:[{label:"ZIO",permalink:"/blog/tags/zio"},{label:"Logging",permalink:"/blog/tags/logging"},{label:"Utilities",permalink:"/blog/tags/utilities"}],title:"Using ZIO Logging",truncated:!1,nextItem:{title:"Welcome",permalink:"/blog/welcome"}},l=[],s={toc:l};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"The complete source code used in this article can be found on ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/blended-zio/blended-zio-jmx"}),"github")))),Object(o.b)("h1",{id:"use-zio-logging"},"Use ZIO logging"),Object(o.b)("p",null,"Within ",Object(o.b)("em",{parentName:"p"},"Blended ZIO")," the services are kept clean of non functional requirements such as relying on a logging service being present within the environment."),Object(o.b)("p",null,"For example, the ",Object(o.b)("inlineCode",{parentName:"p"},"Service")," within ",Object(o.b)("inlineCode",{parentName:"p"},"MBeanServerFacade")," is defined as follows."),Object(o.b)("p",null,'{{< codesection dirref="jmxsrc" file="blended/zio/jmx/MBeanServerFacade.scala" section="service" >}}'),Object(o.b)("p",null,"However, within the service's implementation ",Object(o.b)("inlineCode",{parentName:"p"},"JvmMBeanServerFacade")," the corresponding methods leverage the API of ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://zio.github.io/zio-logging/"}),"zio-logging")," to produce some output while executing the effects."),Object(o.b)("p",null,'{{< codesection dirref="jmxsrc" file="blended/zio/jmx/MBeanServerFacade.scala" section="info" >}}'),Object(o.b)("p",null,"So, when we assemble the service"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"we need to provide a Logging service when building up the ZLayer"),Object(o.b)("li",{parentName:"ul"},"we need to make the Logging service available to the service implementation"),Object(o.b)("li",{parentName:"ul"},"the business service as such should not have any knowledge of the Logging service requirement")),Object(o.b)("p",null,"The code to construct the live service which requires ",Object(o.b)("inlineCode",{parentName:"p"},"Logging")," leverages ",Object(o.b)("inlineCode",{parentName:"p"},"ZLayer.fromFunction"),". We see that a ",Object(o.b)("inlineCode",{parentName:"p"},"Logging")," service is required within the environment and we can use the parameter to the ",Object(o.b)("inlineCode",{parentName:"p"},"fromFunction")," call in the ",Object(o.b)("inlineCode",{parentName:"p"},"provide")," operator so that the requirement of having a ",Object(o.b)("inlineCode",{parentName:"p"},"Logging")," service is eliminated and the sole business service interface remains."),Object(o.b)("p",null,'{{< codesection dirref="jmxsrc" file="blended/zio/jmx/MBeanServerFacade.scala" section="zlayer" >}}'),Object(o.b)("p",null,"We might have other service implementations that do not require logging or use a different logging API while keeping the same business interface."),Object(o.b)("p",null,"Finally, we can construct the environment for our program as we do in the testcase:"),Object(o.b)("p",null,'{{< codesection dirref="jmxtest" file="blended/zio/jmx/MBeanServerTest.scala" section="zlayer" >}}'))}b.isMDXComponent=!0}}]);