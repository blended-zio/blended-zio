(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{113:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),b=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=b(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=b(n),p=a,u=d["".concat(c,".").concat(p)]||d[p]||m[p]||i;return n?r.a.createElement(u,o(o({ref:t},l),{},{components:n})):r.a.createElement(u,o({ref:t},l))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var l=2;l<i;l++)c[l]=n[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},70:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),i=(n(0),n(113)),c={id:"index",title:"JMX Overview"},o={unversionedId:"jmx/index",id:"jmx/index",isDocsHomePage:!1,title:"JMX Overview",description:"All blended applications require some basic JMX functionality:",source:"@site/docs/jmx/index.md",slug:"/jmx/index",permalink:"/blended-zio/docs/jmx/index",version:"current",sidebar:"someSidebar",previous:{title:"Blended ZIO Core",permalink:"/blended-zio/docs/core/index"},next:{title:"A simple MBean Server Facade",permalink:"/blended-zio/docs/jmx/mbeanserver"}},s=[{value:"MBean Server facade",id:"mbean-server-facade",children:[]},{value:"Publish arbitrary case classes as JMX objects",id:"publish-arbitrary-case-classes-as-jmx-objects",children:[]},{value:"Service invocation metrics",id:"service-invocation-metrics",children:[]}],l={toc:s};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"All ",Object(i.b)("em",{parentName:"p"},"blended")," applications require some basic JMX functionality:"),Object(i.b)("h2",{id:"mbean-server-facade"},"MBean Server facade"),Object(i.b)("p",null,"The MBean Server facade provides read only access to the ",Object(i.b)("inlineCode",{parentName:"p"},"MBeanServer")," of the underlying JVM. In ",Object(i.b)("em",{parentName:"p"},"Blended 3")," the corresponding trait is defined ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/woq-blended/blended/blob/main/blended.jmx/jvm/src/main/scala/blended/jmx/BlendedMBeanServerFacade.scala"}),"here"),"."),Object(i.b)("p",null,"The corresponding ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/woq-blended/blended/blob/main/blended.jmx/jvm/src/main/scala/blended/jmx/internal/BlendedMBeanServerFacadeImpl.scala"}),"implementation")," is implemented on top of some case classes to represent the JMX objects. The various methods in general return instances of ",Object(i.b)("inlineCode",{parentName:"p"},"Try")," after executing the calls to the ",Object(i.b)("inlineCode",{parentName:"p"},"MBeanServer"),"."),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/blended-zio/docs/jmx/mbeanserver"}),"MBeanServer Facade implementation details")),Object(i.b)("h2",{id:"publish-arbitrary-case-classes-as-jmx-objects"},"Publish arbitrary case classes as JMX objects"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Blended 3")," implements a mapping from arbitrary case classes to Dynamic MBeans. This mapping requires that all attributes of the case class are of a type supported by the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.oracle.com/cd/E19206-01/816-4178/6madjde4v/index.html"}),"Open MBean specification"),"."),Object(i.b)("p",null,"Any case class that shall be published to JMX requires a naming strategy which maps any given instance of the case class to a JMX Object Name."),Object(i.b)("p",null,"To publish a value within ",Object(i.b)("em",{parentName:"p"},"Blended 3"),", other modules can simply publish case class instances to the Akka event stream."),Object(i.b)("p",null,"The implementation in ",Object(i.b)("em",{parentName:"p"},"Blended 3")," is completed by a ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/woq-blended/blended/blob/main/blended.jmx/jvm/src/main/scala/blended/jmx/internal/ProductMBeanManagerImpl.scala"}),"MBeanManger actor")," which collects those published values from the event stream and creates or updates the MBeans within the MBean server accordingly."),Object(i.b)("p",null,"For the ",Object(i.b)("em",{parentName:"p"},"ZIO")," based implementation the actor has been replaced with a service that can be made via a ",Object(i.b)("inlineCode",{parentName:"p"},"ZLayer")," which transforms the service interface from messages to properly typed ZIO effects."),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/blended-zio/docs/jmx/mbeanpublisher"}),"MBean publisher implementation details")),Object(i.b)("h2",{id:"service-invocation-metrics"},"Service invocation metrics"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Blended 3")," has a mechanism to capture metrics for arbitrary service invocations. Each service invocation is triggered by a ",Object(i.b)("inlineCode",{parentName:"p"},"ServiceInvocation Started")," event, eventually followed by either an ",Object(i.b)("inlineCode",{parentName:"p"},"ServiceInvocation Completed")," or ",Object(i.b)("inlineCode",{parentName:"p"},"ServiceInvocation Failed"),". Service Invocation events are identified by a unique invocation id."),Object(i.b)("p",null,"Furthermore, any service invocation can be mapped to a group identifier, so that invocations belonging to the same group can be summarized:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"the total invocation count"),Object(i.b)("li",{parentName:"ul"},"the count of currently active invocations"),Object(i.b)("li",{parentName:"ul"},"the count of failed invocations"),Object(i.b)("li",{parentName:"ul"},"the count of succeeded invocations"),Object(i.b)("li",{parentName:"ul"},"the minimal, maximal and average execution time of both succeeded and failed invocations")),Object(i.b)("p",null,"Within ",Object(i.b)("em",{parentName:"p"},"Blended 3")," this is implemented by publishing corresponding events on the Akka Event Stream and a service implemented within an actor listening for these events. Also, this actor uses the JMX publishing mechanism to publish the group summaries as MBeans."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The ZIO implementation should migrate the actor based solution to a ZIO module and provide the service via a ZLayer to other modules within ",Object(i.b)("em",{parentName:"p"},"Blended ZIO"),". Also, the publishing of the group summaries to should be decoupled from the collector Service and implemented as an a service, which requires the collector within it's environment."))),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/blended-zio/docs/jmx/servicemetrics"}),"Service Metrics implementation details")))}b.isMDXComponent=!0}}]);